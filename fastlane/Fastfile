# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

PROJECT_DISPLAY_NAME = "travel-app".freeze

PRODUCT_VERSION_XCCONFIG_PATH = "Configs/product_version.xcconfig"

platform :ios do
	desc "Install executables: cocoapods, generamba and homebrew dependencies"
	lane :initialize do
		Dir.chdir("..") do
			sh("sudo gem install bundler")
			sh("bundle install")
			#sh("brew bundle")
		end
	end

	desc "Generate project files and install cocoapods dependencies"
	lane :setup do
		
		# Perform common setup
		self.perform_common_setup()
	end
end

def perform_common_setup
	
	# Generate configuration
	self.generate_configuration()
	
	Dir.chdir("..") do
		
		# Install bundler dependencies
		sh("bundle install")
		
		# Generate project file(s)
		self.perform_bootstrap()
	end
	
	# Install pods
	self.perform_pods_install()
end

def perform_pods_install
	sh("bundle exec pod install --repo-update")
end

def perform_bootstrap
	
	# Bootstrap app main target
	sh("xcodegen generate")
end

def generate_configuration
	product_version = get_xcconfig_product_version
	
	Dir.chdir("../") do
		
		# Apply configuration if needed
		if(File.directory?('config'))
			FileUtils.cp_r('config/.', '.')
		end
		
		sh "Scripts/project_configurator/project_configurator \
--configuration-input configuration.json \
--podfile-input podfile.json \
--configurator-output Sources/Generated \
--podfile-output . \
--xc-config-output Configs/Generated \
--entitlements-output Entitlements/Generated \
--info-plist-strings-dir Resources/Strings/WhiteLabel \
--is-production true \
--product-version #{product_version}"
	end
end

def get_xcconfig_product_version
	versionBase = get_xcconfig_value(
		path: PRODUCT_VERSION_XCCONFIG_PATH,
		name: 'CP_PRODUCT_VERSION_BASE'
	)
	
	return versionBase
end
